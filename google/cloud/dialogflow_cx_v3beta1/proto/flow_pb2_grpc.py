# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.cloud.dialogflow_cx_v3beta1.proto import (
    flow_pb2 as google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2,
)
from google.longrunning import (
    operations_pb2 as google_dot_longrunning_dot_operations__pb2,
)
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class FlowsStub(object):
    """Service for managing [Flows][google.cloud.dialogflow.cx.v3beta1.Flow].
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateFlow = channel.unary_unary(
            "/google.cloud.dialogflow.cx.v3beta1.Flows/CreateFlow",
            request_serializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.CreateFlowRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.Flow.FromString,
        )
        self.DeleteFlow = channel.unary_unary(
            "/google.cloud.dialogflow.cx.v3beta1.Flows/DeleteFlow",
            request_serializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.DeleteFlowRequest.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
        self.ListFlows = channel.unary_unary(
            "/google.cloud.dialogflow.cx.v3beta1.Flows/ListFlows",
            request_serializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.ListFlowsRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.ListFlowsResponse.FromString,
        )
        self.GetFlow = channel.unary_unary(
            "/google.cloud.dialogflow.cx.v3beta1.Flows/GetFlow",
            request_serializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.GetFlowRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.Flow.FromString,
        )
        self.UpdateFlow = channel.unary_unary(
            "/google.cloud.dialogflow.cx.v3beta1.Flows/UpdateFlow",
            request_serializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.UpdateFlowRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.Flow.FromString,
        )
        self.TrainFlow = channel.unary_unary(
            "/google.cloud.dialogflow.cx.v3beta1.Flows/TrainFlow",
            request_serializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.TrainFlowRequest.SerializeToString,
            response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )


class FlowsServicer(object):
    """Service for managing [Flows][google.cloud.dialogflow.cx.v3beta1.Flow].
    """

    def CreateFlow(self, request, context):
        """Creates a flow in the specified agent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteFlow(self, request, context):
        """Deletes a specified flow.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListFlows(self, request, context):
        """Returns the list of all flows in the specified agent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetFlow(self, request, context):
        """Retrieves the specified flow.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateFlow(self, request, context):
        """Updates the specified flow.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def TrainFlow(self, request, context):
        """Trains the specified flow. Note that only the flow in 'draft' environment
        is trained.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_FlowsServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateFlow": grpc.unary_unary_rpc_method_handler(
            servicer.CreateFlow,
            request_deserializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.CreateFlowRequest.FromString,
            response_serializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.Flow.SerializeToString,
        ),
        "DeleteFlow": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteFlow,
            request_deserializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.DeleteFlowRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        "ListFlows": grpc.unary_unary_rpc_method_handler(
            servicer.ListFlows,
            request_deserializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.ListFlowsRequest.FromString,
            response_serializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.ListFlowsResponse.SerializeToString,
        ),
        "GetFlow": grpc.unary_unary_rpc_method_handler(
            servicer.GetFlow,
            request_deserializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.GetFlowRequest.FromString,
            response_serializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.Flow.SerializeToString,
        ),
        "UpdateFlow": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateFlow,
            request_deserializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.UpdateFlowRequest.FromString,
            response_serializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.Flow.SerializeToString,
        ),
        "TrainFlow": grpc.unary_unary_rpc_method_handler(
            servicer.TrainFlow,
            request_deserializer=google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.TrainFlowRequest.FromString,
            response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "google.cloud.dialogflow.cx.v3beta1.Flows", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Flows(object):
    """Service for managing [Flows][google.cloud.dialogflow.cx.v3beta1.Flow].
    """

    @staticmethod
    def CreateFlow(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.dialogflow.cx.v3beta1.Flows/CreateFlow",
            google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.CreateFlowRequest.SerializeToString,
            google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.Flow.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteFlow(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.dialogflow.cx.v3beta1.Flows/DeleteFlow",
            google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.DeleteFlowRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ListFlows(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.dialogflow.cx.v3beta1.Flows/ListFlows",
            google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.ListFlowsRequest.SerializeToString,
            google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.ListFlowsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetFlow(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.dialogflow.cx.v3beta1.Flows/GetFlow",
            google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.GetFlowRequest.SerializeToString,
            google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.Flow.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateFlow(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.dialogflow.cx.v3beta1.Flows/UpdateFlow",
            google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.UpdateFlowRequest.SerializeToString,
            google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.Flow.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def TrainFlow(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/google.cloud.dialogflow.cx.v3beta1.Flows/TrainFlow",
            google_dot_cloud_dot_dialogflow__cx__v3beta1_dot_proto_dot_flow__pb2.TrainFlowRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
